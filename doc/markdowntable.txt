*markdowntable.txt* Plugin for markdown table
" Last Change: 2018 Jan 22
" Maintainer: NORA75
" Licence: MIT
--------------------------------------------------------------------------------
Description~

This plugin provides commands and mappings for markdown table.
Such as make empty table,convert currentline to table.
You can use comannd and mapping only in markdown files by default.
This plugin has only few functions now.I want to make more.

THIS PLUGIN IS NOT COMPLETED YET.
Plugin's mapping or command may be changed in near future.

Note 
This is my first plugin, so it may crash or has some bugs.
I can't care about any case.

--------------------------------------------------------------------------------
CONTENTS~

1. Command                             |markdowntable-command|
2. Mapping                             |markdowntable-mapping|
3. Variables                           |markdowntable-variables|

--------------------------------------------------------------------------------
                                                       *markdowntable-command*
Command~

                                                                  *:TableMake*

:TableMake {row} {column}

    You can type {row} and {column} to make empty table.
    You can change spaces in cell as you like by changing
    |g:cell_spaces|. This value change alignment line's bars quantity too.
    If you use this command in visual-mode.delete select area and
    make empty table.

    Note
    Error occur if {row} or {column} is smaller than zero or no args.

                                                                    *:ToTable*

:ToTable [{symbols}]

    This command is convert plain text to markdown table.
    This command recognize which symbol to convert to separator('|') 
    by |g:symbolPriority| or {symbols}.
    You can type {symbols} as list to which symbol is separator manually.
    If you use this command with !(bang),the command recognize 
    first line as table header and add alignment line.

    Note
    You don't use !(bang).This command don't make alignment line.
    If you set symbol manually, don't use |g:symbolPriority|.
    If the most symbol is't separator('|'),this command escape separator('|').
    How it works:
    Counting each symbol and recognize the most symbol is separator each line.

                                                                 *:ToTableAll*

:ToTableAll [{symbols}]

    This command is like |:ToTable| command.See also |:ToTable|.
    A differ is convert all symbol to separator('|').
    If you use this command with !(bang),the command recognize first line 
    as table header and add alignment line.

    Note
    If you don't set separator('|') as symbol in this command.
    This command escape separator('|').

--------------------------------------------------------------------------------
                                                       *markdowntable-mapping*
Mapping~

<Leader>tm

    Trigger to call |:TableMake|.
    If you use this mapping,The command waits user's input in command-line.
    If you use this mapping in visual-mode,delete select area and 
    make empty table.
    You can change default key mapping on your .vimrc.
    If you want to use mapping only in markdown file.
    You should use |autocommand| or |filetype-plugins| with |:map-local|.

    Example:
    >
        nmap <Space>tm <Plug>(Markdowntable_Tablemake)
        vmap <Space>tm <Plug>(Markdowntable_Tablemake)
<
    Note
    You can repeat this mapping by dot.But you are going to 
    set row and column again.

<Leader>tt

    Trigger to call |:ToTable|.
    Convert selected or current line to table.
    If you use this mapping,this command waits user's input in command-line.
    If you only type enter,this command use |g:symbolPriority|.
    You can change default key mapping on your .vimrc.

    Example:
    >
        nmap <Space>tt <Plug>(Markdowntable_Totable)
        vmap <Space>tt <Plug>(Markdowntable_Totable)
<
    Note
    You can repeat this mapping by dot.But you are going to 
    set symbols again.

<Leader>ta

    Trigger to call |:ToTableAll|.
    Convert selected or current line to table.
    If you use this mapping,The command waits user's input in command-line.
    If you only type enter,the command use |g:symbolPriority|.
    Convert selected or current line to table.
    You can change default key mapping on your .vimrc.

    Example:
    >
        nmap <Space>ta <Plug>(Markdowntable_Totableall)
        vmap <Space>ta <Plug>(Markdowntable_Totableall)
<
    Note
    You can repeat this mapping by dot.But you are going to 
    set symbols again.

--------------------------------------------------------------------------------
                                                     *markdowntable-variables*
Variables~

                                                               *g:cell_spaces*

g:cell_spaces

    Default value is 4.
    This value change spaces amount in the cell for :TableMake.
    This value change alignment line's bar's amount too.

    Note
    You can't set minus value.if you set minus value, the
    value will be changed default.

    Example:
    >
        let g:cell_spaces = 8
<
                                                            *g:symbolpriority*

g:symbolpriority

    This variable is used for |:ToTable| and |:ToTableAll|.
    By default, this variable sets this.
    >
        let g:symbolPriority = [',', ':', ';', '.']
<
    You can set own priorities of symbol by variable.  

    Example: set priority "|" → "," → "."  

    >
        let g:symbolPriority = ["|", ",", "."]  
<

                                               *g:markdowntable_toTableHeader*
g:markdowntable_toTableHeader

    If you want to make header always in mapping of 
    |:ToTable| and |:ToTableAll|,
    You can set this value true(not zero) to make header always.
    Default: false(0)

    Example:
    >
        let g:markdowntable_toTableHeader = 1
<
                                                  *g:markdowntable_disableMap*
g:markdowntable_disableMap

    If you define this variable, disable all default mapping.

    Example:
    >
        let g:markdowntable_disableMap = 1
<
--------------------------------------------------------------------------------
vim:tw=78:ts=8:ft=help:norl:
