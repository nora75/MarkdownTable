*markdowntable.txt* Plugin for markdown table
" Last Change: 2018 Feb 22
" Maintainer: NORA75
" Licence: MIT
--------------------------------------------------------------------------------
Description~

This plugin provides commands and mappings for markdown table.
Such as make empty table,convert currentline to table.
You can use comannd and mapping only in markdown files by default.
This plugin has only few functions now.I want to make more.

THIS PLUGIN IS NOT COMPLETED YET.
Plugin's mapping or command may be changed in near future.

Note 
This is my first plugin, so it may crash or has some bugs.
I can't care about any case.

--------------------------------------------------------------------------------
CONTENTS~

1. Command                             |markdowntable-command|
2. Mapping                             |markdowntable-mapping|
3. Variables                           |markdowntable-variables|

--------------------------------------------------------------------------------
                                                       *markdowntable-command*
Command~

                                                                  *:TableMake*

:TableMake {row} {column}

    You can type {row} and {column} to make empty table.
    You can change spaces in cell as you like by changing
    |g:cell_spaces|. This value change alignment line's bars quantity too.
    In visual-mode.delete select area and make empty table.

    Note
    Error occur if {row} or {column} is smaller than zero or no args.

                                                                    *:ToTable*

:ToTable [{String}...]

    Convert plain text to markdown table.
    Recognize which String to convert to separator('|') 
    by |g:markdowntable_stringpriority| or {String}.
    You can type {String} as list to which String is separator manually.
    Recognize first line as table header and add alignment line.
    Adjust indents and delete empty lines automatically.
    Don't want to make alignment line.Use this command with bang('|')

    Note
    If you set String manually, don't use |g:markdowntable_stringpriority|.
    If the String is't separator('|'),this command escape separator('|').
    You can use regular expression of 'nomagic'(\M) in {String}.
    nomagic example: \[] \(\) \| \. \+
    See also |'nomagic'|.

    How it works:
    Counting each String and recognize the most String is separator each line.

                                                                 *:ToTableAll*

:ToTableAll [{String}...]

    This command is almost all same as |:ToTable| command.See also |:ToTable|.
    A differ is convert all String to separator('|').

    Note
    If you don't set separator('|') as String in this command.
    This command escape separator('|').

                                                                    *:UnTable*

:UnTable

    Convert table to plain text.
    Delete alignment line, if it exists.
    Convert separator('|') to |g:markdowntable_untablestring|.
    Default convert to a space.

                                                                *:ToggleTable*
:ToggleTable

    Convert table to plain text or plain text to table.
    Use :ToTable if lines are table or use :UnTable if plain text.
    If you use this mapping,this command waits user's input in command-line.
    See also |:ToTable| and |:UnTable|.

--------------------------------------------------------------------------------
                                                       *markdowntable-mapping*
Mapping~

<Leader>tm

    Trigger to call |:TableMake|.
    If you use this mapping,The command waits user's input in command-line.
    In visual-mode,delete selected area and make empty table.
    You can change default key mapping on your .vimrc.
    If you want to use mapping only in markdown file.
    You should use |autocommand| or |filetype-plugins| with |:map-local|.

    Example:
    >
        nmap <Space>tm <Plug>(markdowntable_tablemake)
        vmap <Space>tm <Plug>(markdowntable_tablemake)
<
    Note
    You can repeat this mapping by dot.But you are going to 
    set row and column again.

<Leader>tt

    Trigger to call |:ToggleTable|.
    Convert selected or current line to table or plain text.
    If you use this mapping,this command waits user's input in command-line.
    If you only type enter,this command use |g:markdowntable_stringpriority| of |g:UnTable|.
    You can change default key mapping on your .vimrc.

    Example:
    >
        nmap <Space>tt <Plug>(markdowntable_toggletable)
        vmap <Space>tt <Plug>(markdowntable_toggletable)
<
    Note
    You can repeat this mapping by dot.But you'll have to set Strings again.

<Leader>ta

    Trigger to call |:ToTableAll|.
    Same as |:ToTable| mapping.
    You can change default key mapping on your .vimrc.

    Example:
    >
        nmap <Space>ta <Plug>(markdowntable_totableall)
        vmap <Space>ta <Plug>(markdowntable_totableall)
<
    Note
    You can repeat this mapping by dot.But you'll have to set Strings again.

<Leader>tu

    Trigger to call |:UnTable|.
    You can change default key mapping on your .vimrc.

    Example:
    >
        nmap <Space>tu <Plug>(markdowntable_untable)
        vmap <Space>tu <Plug>(markdowntable_untable)
<
    Note
    You can repeat this mapping by dot.But you are going to 
    set Strings again.

--------------------------------------------------------------------------------
                                                     *markdowntable-variables*
Variables~

                                                 *g:markdowntable_cell_spaces*

g:markdowntable_cell_spaces

    Default value is 4.
    This value change spaces amount in the cell for :TableMake.
    This value change alignment line's bar's amount too.

    Note
    You can't set minus value.if you set minus value, the
    value will be changed default.

    Example:
    >
        let g:markdowntable_cell_spaces = 8
<
                                              *g:markdowntable_strign_priority*

g:markdowntable_stringpriority

    This variable is used for |:ToTable| and |:ToTableAll|.
    By default, this variable sets this.
    >
        let g:markdowntable_strign_priority = ['|', ';', ':', ',', '.']
<
    You can set own priorities of String by variable.  

    Example: set priority '|' → ',' → '.'  

    >
        let g:markdowntable_strign_priority = ['|', ',', '.']  
<
                                                     *g:markdowntable_noalign*
g:markdowntable_noalign

    If you want not to make alignment line always in mapping of 
    |:ToTable| and |:ToTableAll|,
    You can set this value true(not zero) to don't make alignment line always.
    Default: false(0)

    Example:
    >
        let g:markdowntable_noalign = 1
        let g:markdowntable_noalign = v:true
<
                                                   *g:markdowntable_enablemap*
g:markdowntable_enablemap

    If you define this variable, enable all default mapping.

    Example:
    >
        let g:markdowntable_enablemap = 1
        let g:markdowntable_enablemap = v:true
<
                                               *g:markdowntable_untablestring*
g:markdowntable_untablestring

    You can change convert separator('|') to specific char by define this 
    variable.
    Default: '' (empty char)

    Example:
    >
        let g:markdowntable_untablestring = ','
<
--------------------------------------------------------------------------------
vim:tw=78:ts=8:ft=help:norl:
